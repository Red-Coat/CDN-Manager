
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: clusterdistributionclasses.cdn.redcoat.dev
spec:
  group: cdn.redcoat.dev
  names:
    kind: ClusterDistributionClass
    listKind: ClusterDistributionClassList
    plural: clusterdistributionclasses
    singular: clusterdistributionclass
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A DistributionClass represents a cluster-scoped configuration
          for a third party Content Delivery Network / Edge Cache (eg CloudFront).
          This holds generic configuration about a CDN integration, such as access
          tokens, or other CDN-specific configurations.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Configuration for the DistributionClass or ClusterDistributionClass
              resource
            properties:
              providers:
                description: List of one or more providers to deploy Distributions
                  to. At least one must be provided
                properties:
                  cloudfront:
                    description: If this block exists, Distributions referencing this
                      DistributionClass will be setup in CloudFront. You can specify
                      an Access Key and Secret key in this block, or authorize the
                      pod directly by setting the AWS_ACCESS_KEY_ID / AWS_ACCESS_KEY_ID
                      environment variables, or using AWS' IAM Roles For Service Accounts
                      (IRSA) Controller.
                    properties:
                      auth:
                        description: Details on how to authenticate with the AWS API.
                          If this is not specified, we will fall back to the ambient
                          credentials given to the controller pod.
                        properties:
                          accessKeyRef:
                            description: 'A reference to a secret containing an AWS
                              Access ID and Secret Key pair. The Secret must have
                              data saved in the standard fields: AWS_ACCESS_KEY_ID
                              and AWS_SECRET_ACCESS_KEY. Other fields are ingored.'
                            properties:
                              name:
                                description: The name of the resource
                                type: string
                              namespace:
                                description: The namespace of the resource. For ClusterDistributionClasses,
                                  this field is required.
                                type: string
                            required:
                            - name
                            type: object
                          jwt:
                            description: Details on how to authenticate using a ServiceAccount
                              token as a web identity for AWS STS. You should already
                              have setup the cluster as an identity provider in AWS
                              IAM.
                            properties:
                              annotationName:
                                default: eks.amazonaws.com/role-arn
                                description: The name of the annotation on the ServiceAccount
                                  to search for the Role to assume. On EKS, the standard
                                  annotation is the default ("eks.amazonaws.com/role-arn").
                                type: string
                              serviceAccount:
                                description: A reference to the ServiceAccount to
                                  use. A ServiceAccount token will be generated for
                                  this resource, and used as the web identity.
                                properties:
                                  name:
                                    description: The name of the resource
                                    type: string
                                  namespace:
                                    description: The namespace of the resource. For
                                      ClusterDistributionClasses, this field is required.
                                    type: string
                                required:
                                - name
                                type: object
                              stsAudience:
                                default: sts.amazonaws.com
                                description: The audience to use for the token. It
                                  is normally save to leave this as the default ("sts.amazonaws.com")
                                  unless you know you have a different setup.
                                type: string
                            required:
                            - serviceAccount
                            type: object
                        type: object
                      cachePolicyId:
                        description: The Policy ID of the CloudFront Cache Policy
                          you want to use on distributions. This value is normally
                          optional, but required if you want to set an originRequestPolicyId.
                        type: string
                      originRequestPolicyId:
                        description: The Policy ID of the CloudFront Origin Request
                          Policy you want to use on distributions. If you specify
                          this value, cachePolicyId is required.
                        type: string
                      sslMode:
                        default: sni-only
                        description: Set this true if you need to request a dedicated
                          IP address for your distribution in order to support legacy
                          (non-SNI) clients. Warning, this will incurr high costs
                          from AWS!
                        enum:
                        - sni-only
                        - vpi
                        - static-ip
                        type: string
                      supportedMethods:
                        description: "The list of HTTP methods to support. Others
                          will be rejected with the CDN provider's native behaviour.
                          NB: the controller can only guarantee that methods will
                          work if they are \"standard\", eg CloudFront only supports
                          HEAD, GET, OPTIONS, POST, PUT, DELETE. \n In addition, the
                          controller cannot guarantee that methods you don't specify
                          here _won't_ be accessible. For example, CloudFront only
                          supports limited subsets, so if you specify any one of POST,
                          PUT, or DELETE, all methods are enabled."
                        items:
                          type: string
                        type: array
                    required:
                    - supportedMethods
                    type: object
                type: object
            required:
            - providers
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: distributionclasses.cdn.redcoat.dev
spec:
  group: cdn.redcoat.dev
  names:
    kind: DistributionClass
    listKind: DistributionClassList
    plural: distributionclasses
    singular: distributionclass
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A DistributionClass represents a namespaced-scoped configuration
          for a third party Content Delivery Network / Edge Cache (eg CloudFront).
          This holds generic configuration about a CDN integration, such as access
          tokens, or other CDN-specific configurations.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Configuration for the DistributionClass or ClusterDistributionClass
              resource
            properties:
              providers:
                description: List of one or more providers to deploy Distributions
                  to. At least one must be provided
                properties:
                  cloudfront:
                    description: If this block exists, Distributions referencing this
                      DistributionClass will be setup in CloudFront. You can specify
                      an Access Key and Secret key in this block, or authorize the
                      pod directly by setting the AWS_ACCESS_KEY_ID / AWS_ACCESS_KEY_ID
                      environment variables, or using AWS' IAM Roles For Service Accounts
                      (IRSA) Controller.
                    properties:
                      auth:
                        description: Details on how to authenticate with the AWS API.
                          If this is not specified, we will fall back to the ambient
                          credentials given to the controller pod.
                        properties:
                          accessKeyRef:
                            description: 'A reference to a secret containing an AWS
                              Access ID and Secret Key pair. The Secret must have
                              data saved in the standard fields: AWS_ACCESS_KEY_ID
                              and AWS_SECRET_ACCESS_KEY. Other fields are ingored.'
                            properties:
                              name:
                                description: The name of the resource
                                type: string
                              namespace:
                                description: The namespace of the resource. For ClusterDistributionClasses,
                                  this field is required.
                                type: string
                            required:
                            - name
                            type: object
                          jwt:
                            description: Details on how to authenticate using a ServiceAccount
                              token as a web identity for AWS STS. You should already
                              have setup the cluster as an identity provider in AWS
                              IAM.
                            properties:
                              annotationName:
                                default: eks.amazonaws.com/role-arn
                                description: The name of the annotation on the ServiceAccount
                                  to search for the Role to assume. On EKS, the standard
                                  annotation is the default ("eks.amazonaws.com/role-arn").
                                type: string
                              serviceAccount:
                                description: A reference to the ServiceAccount to
                                  use. A ServiceAccount token will be generated for
                                  this resource, and used as the web identity.
                                properties:
                                  name:
                                    description: The name of the resource
                                    type: string
                                  namespace:
                                    description: The namespace of the resource. For
                                      ClusterDistributionClasses, this field is required.
                                    type: string
                                required:
                                - name
                                type: object
                              stsAudience:
                                default: sts.amazonaws.com
                                description: The audience to use for the token. It
                                  is normally save to leave this as the default ("sts.amazonaws.com")
                                  unless you know you have a different setup.
                                type: string
                            required:
                            - serviceAccount
                            type: object
                        type: object
                      cachePolicyId:
                        description: The Policy ID of the CloudFront Cache Policy
                          you want to use on distributions. This value is normally
                          optional, but required if you want to set an originRequestPolicyId.
                        type: string
                      originRequestPolicyId:
                        description: The Policy ID of the CloudFront Origin Request
                          Policy you want to use on distributions. If you specify
                          this value, cachePolicyId is required.
                        type: string
                      sslMode:
                        default: sni-only
                        description: Set this true if you need to request a dedicated
                          IP address for your distribution in order to support legacy
                          (non-SNI) clients. Warning, this will incurr high costs
                          from AWS!
                        enum:
                        - sni-only
                        - vpi
                        - static-ip
                        type: string
                      supportedMethods:
                        description: "The list of HTTP methods to support. Others
                          will be rejected with the CDN provider's native behaviour.
                          NB: the controller can only guarantee that methods will
                          work if they are \"standard\", eg CloudFront only supports
                          HEAD, GET, OPTIONS, POST, PUT, DELETE. \n In addition, the
                          controller cannot guarantee that methods you don't specify
                          here _won't_ be accessible. For example, CloudFront only
                          supports limited subsets, so if you specify any one of POST,
                          PUT, or DELETE, all methods are enabled."
                        items:
                          type: string
                        type: array
                    required:
                    - supportedMethods
                    type: object
                type: object
            required:
            - providers
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: distributions.cdn.redcoat.dev
spec:
  group: cdn.redcoat.dev
  names:
    kind: Distribution
    listKind: DistributionList
    plural: distributions
    singular: distribution
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - jsonPath: .status.endpoints[0].host
      name: Endpoint
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A distribution resource should be created to ensure an up to
          date Distribution is setup. If targetted at a service or ingress, the Distribution
          will be kept up to date with its external ingress address. The Distribution
          will also keep up to date with any changes or renewals made the TLS certificate
          secret it is given.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: The desired state of the Distribution
            properties:
              distributionClass:
                description: Reference to the Distribution Class provider to use for
                  this distribution
                properties:
                  kind:
                    description: The kind of resource to target
                    type: string
                  name:
                    description: The name of the resource to target. This must be
                      in the same namespace as the Distribution resource.
                    type: string
                required:
                - kind
                - name
                type: object
              hosts:
                description: 'The list of host names that this distribition is for,
                  following the same rules as the host field of an IngressRule, namely
                  that it is a fully qualified domain name, as defined by RFC 3986
                  with two exceptions: 1. IP address are not allowed. Content Delivery
                  Networks and edge caches manage their own IP addresses, and listening
                  on these specifically neither makes sense, or is allowed by providers.
                  2. The `:` delimeter is not allowed. Most CDNs always use port 80
                  for HTTP and 443 for HTTPS and these are not configurable. If you
                  are using TLS, each of these host names _must_ exist within the
                  given certificate. Warning: If you are using CloudFront, you must
                  also specify a TLS certificate if you give a list of hosts.'
                items:
                  type: string
                type: array
              origin:
                description: Information about the "Origin" for the distribution,
                  ie where the CDN should be setup to point to. We would normally
                  expect this to be this kubernetes cluster, although it does not
                  have to be.
                properties:
                  host:
                    description: If you specify this, this takes precendence over
                      any detected ingress load balancer hostnames. Use this to override
                      the target's hostname, or if you have not specified a kubernetes
                      target.
                    type: string
                  httpPort:
                    default: 80
                    description: The port to target for HTTP requests. If not given,
                      this defaults to 80.
                    format: int32
                    type: integer
                  httpsPort:
                    default: 443
                    description: The port to target for HTTPS requests. If not given,
                      this defaults to 443.
                    format: int32
                    type: integer
                required:
                - host
                type: object
              tls:
                description: The TLS configuration for this distribution (eg the secret
                  name for the TLS certificate, and how to handle insecure requests).
                properties:
                  mode:
                    default: redirect
                    description: 'Sets how TLS is handled by the distribution: Redirect
                      (default) causes HTTP requests to be redirected to HTTPS, Only
                      causes HTTP requests to be dropped, Both causes both HTTP and
                      HTTPs requests to be respected. NB: Different cloud providers
                      may vary in the way they interpret or respect this directive.'
                    enum:
                    - redirect
                    - only
                    - both
                    type: string
                  secretName:
                    description: The name of the kubernetes secret containing the
                      TLS certificate to be used by the distribution. This should
                      be of type kubernetes.io/tls and have the required fields (tls.crt
                      and tls.key). Other fields are ignored.
                    type: string
                required:
                - mode
                - secretName
                type: object
            required:
            - distributionClass
            - hosts
            - origin
            type: object
          status:
            description: The current State of the Distribution
            properties:
              cloudfront:
                description: Information about the state of the CloudFront distribution
                  and associated resources.
                properties:
                  certificateArn:
                    description: The ARN of the ACM Certificate created for the distribution
                    type: string
                  id:
                    description: The ID of the CloudFront Distribution (you can use
                      this in any interaction with the aws cloudfront api).
                    type: string
                  state:
                    description: 'The CloudFront State as reported by the AWS API.
                      NB: "InProgress" does not always mean the distribution is not
                      yet available as sometimes this occurs when minor items are
                      being updated.'
                    enum:
                    - Deployed
                    - Disabled
                    - InProgress
                    - Unknown
                    type: string
                required:
                - state
                type: object
              endpoints:
                description: List of one or more "endpoints" for the deployed distribution.
                  These can be either hostnames for DNS CNAMING, or direct IP addresses,
                  depending on the provider.
                items:
                  description: "Information about a specific Endpoint \n This must
                    always contain a Provider identifier, as all endpoints are associated
                    with one. It can then have a hostname, IP address, or both. If
                    it has both, these should be the same resource, eg: \n Acceptable:
                    - ip: 1.2.3.4   host: lb-1-2-3-4.provider.example.com \n Not Acceptable:
                    - ip: 1.2.3.4   host: lb-4-5-6-7.provider.example.com \n If there
                    are two distinct endpoints, one with an ip and one with host,
                    just specify these as seperate Endpoint items: - ip: 1.2.3.4 -
                    host: lb-4-5-6-7.provider.example.com"
                  properties:
                    host:
                      description: A hostname that the distribution is available at.
                        This is what you would use in an DNS CNAME record. At least
                        one of "Host" and "IP" must be set for each Endpoint.
                      type: string
                    ip:
                      description: An IP address that the distribution is available
                        at. This is what you would use in a DNS A or AAAA record.
                        At least one of "Host" and "IP" must be set for each Endpoint.
                      type: string
                    provider:
                      description: The name of the provider that is responsible for
                        this endpoint (eg "cloudfront").
                      type: string
                  required:
                  - provider
                  type: object
                type: array
              ready:
                type: boolean
            required:
            - ready
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
